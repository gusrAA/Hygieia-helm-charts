apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "hygieia.fullname" . }}-api
  labels:
    app: {{ template "hygieia.name" . }}
    chart: {{ template "hygieia.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.api.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "hygieia.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "hygieia.name" . }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
      - name: wait-for-mongo
        image: busybox
        command: 
          - 'sh'
          - '-c'
          - 'until nslookup {{ .Release.Name }}-mongodb; do echo waiting for mongodb; sleep 2; done;'
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          env:
{{-  range $key, $val := .Values.env }}
            - name: {{ $key | quote }}
              value: {{ toString $val | quote }}
{{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
# TODO: Find or implement a healthcheck for api
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          resources:
{{ toYaml .Values.api.resources | indent 12 }}
    {{- with .Values.api.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.api.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.api.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
